import React, { useState } from 'react'
import { useWikiStore, EntryCategory } from '../store/useWikiStore'

const CATEGORY_ICONS: Record<EntryCategory, string> = {
  [EntryCategory.CHARACTER]: '👤',
  [EntryCategory.LOCATION]: '🏛️',
  [EntryCategory.ITEM]: '💎',
  [EntryCategory.EVENT]: '📜',
  [EntryCategory.CONCEPT]: '🌟',
  [EntryCategory.ORGANIZATION]: '🏢',
  [EntryCategory.TIMELINE]: '📅',
  [EntryCategory.LORE]: '📚',
  [EntryCategory.META]: '⚙️'
}

const CATEGORY_LABELS: Record<EntryCategory, string> = {
  [EntryCategory.CHARACTER]: 'キャラクター',
  [EntryCategory.LOCATION]: '場所',
  [EntryCategory.ITEM]: 'アイテム',
  [EntryCategory.EVENT]: '出来事',
  [EntryCategory.CONCEPT]: '概念',
  [EntryCategory.ORGANIZATION]: '組織',
  [EntryCategory.TIMELINE]: '時系列',
  [EntryCategory.LORE]: '世界観',
  [EntryCategory.META]: 'メタ'
}

export const WikiPanel: React.FC = () => {
  const {
    searchQuery,
    selectedCategory,
    showAutoGenerated,
    selectedEntryId,
    setSearchQuery,
    setSelectedCategory,
    toggleShowAutoGenerated,
    selectEntry,
    getFilteredEntries,
    getCategoryCount,
    getAllTags
  } = useWikiStore()

  const [showCategories, setShowCategories] = useState(true)
  const [showRecentEntries, setShowRecentEntries] = useState(true)

  const filteredEntries = getFilteredEntries()
  const recentEntries = filteredEntries.slice(0, 5)
  const allTags = getAllTags()

  const handleCategoryClick = (category: EntryCategory) => {
    setSelectedCategory(selectedCategory === category ? null : category)
  }

  const formatTimeAgo = (date: Date) => {
    const now = new Date()
    const diffMs = now.getTime() - date.getTime()
    const diffMins = Math.floor(diffMs / (1000 * 60))
    const diffHours = Math.floor(diffMs / (1000 * 60 * 60))
    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24))

    if (diffMins < 1) return 'たった今'
    if (diffMins < 60) return `${diffMins}分前`
    if (diffHours < 24) return `${diffHours}時間前`
    return `${diffDays}日前`
  }

  return (
    <div className="wiki-panel">
      <div className="wiki-panel-header">
        <h3>Wiki</h3>
        <div className="wiki-header-actions">
          <button
            className={`wiki-toggle-btn ${showAutoGenerated ? 'active' : ''}`}
            onClick={toggleShowAutoGenerated}
            title="自動生成項目の表示切替"
          >
            🤖
          </button>
        </div>
      </div>

      {/* Search */}
      <div className="wiki-search">
        <input
          type="text"
          placeholder="エントリを検索..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="wiki-search-input"
        />
      </div>

      {/* Categories */}
      <div className="wiki-section">
        <div 
          className="wiki-section-header"
          onClick={() => setShowCategories(!showCategories)}
        >
          <span>📂 カテゴリ</span>
          <span className="wiki-section-toggle">
            {showCategories ? '▼' : '▶'}
          </span>
        </div>
        {showCategories && (
          <div className="wiki-categories">
            {Object.values(EntryCategory).map(category => {
              const count = getCategoryCount(category)
              if (count === 0) return null
              
              return (
                <div
                  key={category}
                  className={`wiki-category-item ${selectedCategory === category ? 'active' : ''}`}
                  onClick={() => handleCategoryClick(category)}
                >
                  <span className="wiki-category-icon">
                    {CATEGORY_ICONS[category]}
                  </span>
                  <span className="wiki-category-label">
                    {CATEGORY_LABELS[category]}
                  </span>
                  <span className="wiki-category-count">
                    ({count})
                  </span>
                </div>
              )
            })}
          </div>
        )}
      </div>

      {/* Recent Entries */}
      <div className="wiki-section">
        <div 
          className="wiki-section-header"
          onClick={() => setShowRecentEntries(!showRecentEntries)}
        >
          <span>📋 最近のエントリ</span>
          <span className="wiki-section-toggle">
            {showRecentEntries ? '▼' : '▶'}
          </span>
        </div>
        {showRecentEntries && (
          <div className="wiki-recent-entries">
            {recentEntries.length === 0 ? (
              <div className="wiki-empty-state">
                エントリがありません
              </div>
            ) : (
              recentEntries.map(entry => (
                <div
                  key={entry.id}
                  className={`wiki-entry-item ${selectedEntryId === entry.id ? 'active' : ''}`}
                  onClick={() => selectEntry(entry.id)}
                >
                  <div className="wiki-entry-header">
                    <span className="wiki-entry-type">
                      {entry.autoGenerated ? '[Auto]' : '[User]'}
                    </span>
                    <span className="wiki-entry-icon">
                      {entry.autoGenerated ? '🆕' : '✏️'}
                    </span>
                    <span className="wiki-entry-time">
                      {formatTimeAgo(entry.updatedAt)}
                    </span>
                  </div>
                  <div className="wiki-entry-title">
                    "{entry.title}"
                  </div>
                  <div className="wiki-entry-summary">
                    {entry.content.summary}
                  </div>
                </div>
              ))
            )}
          </div>
        )}
      </div>

      {/* Search Results */}
      {searchQuery && (
        <div className="wiki-section">
          <div className="wiki-section-header">
            <span>🔍 検索結果 ({filteredEntries.length}件)</span>
          </div>
          <div className="wiki-search-results">
            {filteredEntries.map(entry => (
              <div
                key={entry.id}
                className={`wiki-entry-item ${selectedEntryId === entry.id ? 'active' : ''}`}
                onClick={() => selectEntry(entry.id)}
              >
                <div className="wiki-entry-header">
                  <span className="wiki-entry-category">
                    {CATEGORY_ICONS[entry.category]}
                  </span>
                  <span className="wiki-entry-importance">
                    {'★'.repeat(Math.floor(entry.metadata.importance / 20))}
                  </span>
                </div>
                <div className="wiki-entry-title">
                  {entry.title}
                </div>
                <div className="wiki-entry-tags">
                  {entry.tags.slice(0, 3).map(tag => (
                    <span key={tag} className="wiki-tag">
                      #{tag}
                    </span>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Quick Add */}
      <div className="wiki-quick-actions">
        <button className="wiki-add-btn" title="新しいエントリを追加">
          + エントリ追加
        </button>
      </div>
    </div>
  )
}
